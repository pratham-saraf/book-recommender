# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sHxgqciAcxd0Ofh1SoyLoXsApxEI1hT7
"""


import pandas as pd
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import TfidfVectorizer

df = pd.read_json("model/data/search_final.json")

vectorizer = TfidfVectorizer()
tfidf = vectorizer.fit_transform(df["search"])

def search(query):
    vec = vectorizer.transform([query])
    similar = cosine_similarity(vec,tfidf).flatten()
    indices = np.argpartition(similar,-10)[-10:]
    results = df.iloc[indices]
    results = results.sort_values("ratings",ascending=False)
    results = results.head(12)
    results.drop(["search","ratings"],axis=1,inplace=True)
    results = results.to_json(orient='records')
    return results

def search_id(query):
    result = (df.loc[df['book_id'] == query])
    result = result.to_dict(orient='records')
    return result

if __name__ == "__main__":
    search("harry")